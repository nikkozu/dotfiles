#!/usr/bin/env python

import os
from datetime import datetime
from pathlib import Path

home             = str(Path.home())
screenshot_dir   = f"{home}/Pictures/screenshots"
os.chdir(screenshot_dir)
original_file    = datetime.now().strftime("Screenshot_%Y-%m-%d_%H-%M-%S.png")
target           = list(original_file)
target.insert(-4, 'X')
target_file      = ''.join(target)
color_profile    = "/usr/share/color/icc/colord/sRGB.icc"
border_size      = "1"
background_color = "white"
background_size  = "10"
shadow_size      = "40x5+0+10"
#  font             = "JetBrains-Mono-Regular-Nerd-Font-Complete"
font             = "Caskaydia-Cove-Nerd-Font-Complete-Mono"
font_size        = "12"
color_fg         = "#ffffff"
color_bg         = "#666666"
radius           = "10"
author_position  = ["SouthEast", "+28+16"]
author           = "ScreenShoter: @" + \
                   os.popen("echo $USER").read().rstrip("\n")

os.system(f"""
flameshot gui --raw > {original_file}

convert {original_file} \\( +clone -alpha extract \
-draw 'fill black polygon 0,0 0,{radius} {radius},0 fill white circle {radius},{radius} {radius},0' \
\\( +clone -flip \\) -compose Multiply -composite \
\\( +clone -flop \\) -compose Multiply -composite \\) \
-alpha off -compose CopyOpacity -composite {target_file}

convert {target_file} \\( +clone -background black \
-shadow {shadow_size} \\) +swap -background none \
-layers merge +repage {target_file} \

convert {target_file} -bordercolor {background_color} \
-border {background_size} {target_file} \

echo -n " {author} " | convert {target_file} \
-gravity {author_position[0]} -pointsize {font_size} -fill '{color_fg}' \
-undercolor '{color_bg}' -font {font} \
-annotate {author_position[1]} @- {target_file}

convert {target_file} -gravity South -chop 0x{int(background_size)/2} \
{target_file} \

convert {target_file} -gravity North -background {background_color} \
-splice 0x{int(background_size)/2} {target_file} \

convert {target_file} -profile {color_profile} {target_file} \
""")

list_file = os.popen("ls -p | grep -v /").read().split("\n")[:-1]
last_file = list_file[-1]
if 'X' in last_file:
    os.system(f"rm -rf {original_file}")
    os.system(f"xclip -selection clipboard -i {target_file} -t image/png")

size = os.popen(f"find {last_file} -printf %s").read()
if size == "0":
    os.system(f"rm -rf {last_file}")

